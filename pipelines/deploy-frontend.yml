# This pipeline takes the frontend-app build from build pipeline and
# releases it to a test environment. It then releases it as a artifact after manual approval

trigger: none

resources:
  pipelines:
    - pipeline: build
      project: AzurePerceptTestDrive
      source: Build Front End App
      trigger:
        enabled: true

pool:
    vmImage: 'ubuntu-latest'

variables:
  Variable_Group: "FrontEnd_ReleaseEnvironment"

stages:
  - stage: Deploy
    jobs:
      - job: Deploy
        variables:
          - group: ${{variables.Variable_Group}}
        steps:
          - checkout: none
          - download: none
          - task: DownloadPipelineArtifact@2
            displayName: "Download Pipeline Artifact"
            inputs:
              buildType: 'specific'
              project: 'ce7d4f25-7269-4f94-a4b8-c7ddb4991e5b'
              definition: '20'
              buildVersionToDownload: 'latest'
              artifactName: 'aptd_app'
              targetPath: '$(Pipeline.Workspace)'

          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(Pipeline.Workspace)"
              Contents: "percept-testdrive-app.zip"
              TargetFolder: "$(Build.Repository.LocalPath)"

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'AED E2E Experiences'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # automatically install any extensions
                az config set extension.use_dynamic_install=yes_without_prompt
                WEBAPP_DEPLOYMENT_ZIP="percept-testdrive-app.zip"
                
                # IOTHUB_CONNECTION_STRING="$(az iot hub connection-string show --hub-name "$IOTHUB_NAME" --query "connectionString" --output tsv)"
                
                # az webapp config connection-string set --connection-string-type Custom --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP" --settings "EventHub=$IOTHUB_CONNECTION_STRING" --output "none"
                # # Turn on web sockets
                # az webapp config set --resource-group "$RESOURCE_GROUP" --name "$WEBAPP_NAME" --web-sockets-enabled true --output "none"
                
                # echo "Web App settings have been configured"
                
                echo "Deploying Web App using \"$WEBAPP_DEPLOYMENT_ZIP\" zip file"
                # Step to deploy the app to azure
                az webapp deployment source config-zip --resource-group "$RESOURCE_GROUP" --name "$WEBAPP_NAME" --src "$WEBAPP_DEPLOYMENT_ZIP" --output "none"
                echo "Deployment is complete"
              workingDirectory: '$(Build.Repository.LocalPath)'

          # - task: Bash@3
          #   inputs:
          #     targetType: "inline"
          #     script: |
          #       # Write your commands here
          #       set -e
          #       if [ -z $(command -v az) ]; then
          #           echo "Installing Azure-cli"
          #           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          #           echo "Installed Azure-cli"
          #       fi

          #       # automatically install any extensions
          #       az config set extension.use_dynamic_install=yes_without_prompt

          #       WEBAPP_DEPLOYMENT_ZIP="ava-percept-app.zip"
          #       echo "Attempting login with Service Principal account"
          #       az login --service-principal --username "$SP_APP_ID" --password "$SP_APP_PWD" --tenant "$TENANT_ID" --output "none"
          #       echo "Login successful"

          #       # IOTHUB_CONNECTION_STRING="$(az iot hub connection-string show --hub-name "$IOTHUB_NAME" --query "connectionString" --output tsv)"

          #       # az webapp config connection-string set --connection-string-type Custom --name "$WEBAPP_NAME" --resource-group "$RESOURCE_GROUP" --settings "EventHub=$IOTHUB_CONNECTION_STRING" --output "none"
          #       # # Turn on web sockets
          #       # az webapp config set --resource-group "$RESOURCE_GROUP" --name "$WEBAPP_NAME" --web-sockets-enabled true --output "none"

          #       # echo "Web App settings have been configured"

          #       echo "Deploying Web App using \"$WEBAPP_DEPLOYMENT_ZIP\" zip file"
          #       # Step to deploy the app to azure
          #       az webapp deployment source config-zip --resource-group "$RESOURCE_GROUP" --name "$WEBAPP_NAME" --src "$WEBAPP_DEPLOYMENT_ZIP" --output "none"
          #       echo "Deployment is complete"
          #     workingDirectory: "$(Build.Repository.LocalPath)"

  - stage: Publish
    jobs:
      - deployment: "Publish"
        displayName: "Publish_Artifacts"
        environment: "ApproveFrontEndRelease"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none
                - download: none

                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'specific'
                    project: 'ce7d4f25-7269-4f94-a4b8-c7ddb4991e5b'
                    definition: '20'
                    buildVersionToDownload: 'latest'
                    artifactName: 'aptd_app'
                    targetPath: '$(Pipeline.Workspace)'

                - task: PublishPipelineArtifact@1
                  inputs:
                    targetPath: "$(Pipeline.Workspace)/percept-testdrive-app.zip"
                    artifact: "aptd_app"
                    publishLocation: "pipeline"